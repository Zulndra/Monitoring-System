name: Deploy to Production

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy-production:
    runs-on: ubuntu-latest
    environment:
      name: production
      url: http://98.87.83.12
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create Backup
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            cd ${{ secrets.PROJECT_PATH }}
            
            # Create backup directory
            BACKUP_DIR="../backups/$(date +%Y%m%d_%H%M%S)"
            mkdir -p $BACKUP_DIR
            cp -r . $BACKUP_DIR
            
            echo "✅ Backup created at $BACKUP_DIR"

      - name: Deploy to Production Server
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            set -e  # Exit on error
            
            cd ${{ secrets.PROJECT_PATH }}

            git config --global --add safe.directory ${{ secrets.PROJECT_PATH }}
            
            echo "📥 Pulling latest changes..."
            git fetch origin
            git checkout main
            git pull origin main
            
            echo "🔄 Restarting Docker services..."
            # Stop containers
            docker compose down || echo "No containers to stop"
            
            # Pull latest images
            docker compose pull || echo "Skip pull images"
            
            # Start containers
            docker compose up -d
            
            echo "⏳ Waiting for containers to be ready..."
            sleep 5
            
            echo "📊 Container status:"
            docker compose ps
            
            echo "✅ Production deployment completed!"

      - name: Verify Deployment
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            cd ${{ secrets.PROJECT_PATH }}
            
            # Check if containers are running
            RUNNING=$(docker compose ps --format json | grep -c "running" || echo "0")
            
            if [ "$RUNNING" -gt 0 ]; then
              echo "✅ $RUNNING container(s) running"
            else
              echo "❌ No containers running!"
              docker compose logs --tail=50
              exit 1
            fi

      - name: Deployment Summary
        if: always()
        run: |
          echo "### 🚀 Production Deployment Complete!" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- **Server**: 98.87.83.12" >> $GITHUB_STEP_SUMMARY
          echo "- **Branch**: main" >> $GITHUB_STEP_SUMMARY
          echo "- **Backup**: Created ✅" >> $GITHUB_STEP_SUMMARY
          
          if [ ${{ job.status }} == 'success' ]; then
            echo "- **Status**: ✅ Success" >> $GITHUB_STEP_SUMMARY
          else
            echo "- **Status**: ❌ Failed" >> $GITHUB_STEP_SUMMARY
          fi
